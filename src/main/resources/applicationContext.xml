<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"  
    xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"  
    xmlns:jpa="http://www.springframework.org/schema/data/jpa"  
    xmlns:security="http://www.springframework.org/schema/security"  
    xsi:schemaLocation="  
        http://www.springframework.org/schema/aop   
        http://www.springframework.org/schema/aop/spring-aop-4.1.xsd  
        http://www.springframework.org/schema/security   
        http://www.springframework.org/schema/security/spring-security-4.1.xsd  
        http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd  
        http://www.springframework.org/schema/data/jpa   
        http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd  
        http://www.springframework.org/schema/tx   
        http://www.springframework.org/schema/tx/spring-tx-4.1.xsd  
        http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context-4.1.xsd">
     <!-- 引入properties配置文件 -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">

          <property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
				<value>classpath:log4j.properties</value>
			</list>
		</property>
    </bean>
    <!-- 使用注解式注入 -->
    <!-- <context:annotation-config /> -->    
    <!-- 自动扫描 -->
    <!-- <context:component-scan base-package="com.lrx.Actions" /> -->
    
    <!-- 数据源c3p0 -->  
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">  
        <property name="driverClass" value="${jdbc.driverClassName}" />  
        <property name="jdbcUrl" value="${jdbc.url}" />  
        <property name="user" value="${jdbc.username}" />  
        <property name="password" value="${jdbc.password}" />  
        <property name="maxPoolSize" value="${c3p0.pool.size.max}" />  
        <property name="minPoolSize" value="${c3p0.pool.size.min}" />  
        <property name="initialPoolSize" value="${c3p0.pool.size.ini}" />  
        <property name="acquireIncrement" value="${c3p0.pool.size.increment}" />  
    </bean>  
    
    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- 自动扫描mapping.xml文件 -->
        <property name="mapperLocations" value="classpath*:com/lrx/Map/**/*Mapper.xml"></property>
    </bean>

     <!-- 使用JDBC事物 -->  
    <bean id="transactionManager"  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean>  
      
    <!-- AOP配置事物 -->  
    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        <tx:attributes>  
            <tx:method name="select*" read-only="true" propagation="REQUIRED" />  
            <tx:method name="delete*"  propagation="REQUIRED" />  
            <tx:method name="update*" propagation="REQUIRED" />  
            <tx:method name="insert*" propagation="REQUIRED" />  
            <tx:method name="*" propagation="REQUIRED" />  
        </tx:attributes>  
    </tx:advice>  
      
    <!-- 配置AOP切面 -->  
    <aop:config>
        <aop:pointcut id="transactionPointcut" expression="execution(* com.lrx.Service.*.*(..))"/>  
        <aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice"/>  
    </aop:config>
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
         <!--basePackage指定要扫描的包，在此包之下的映射器都会被搜索到。可指定多个包，包与包之间用逗号或分号分隔-->
        <property name="basePackage" value="com.lrx.Dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>   
    
    
<!--     <bean id="springProcessEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
		<property name="dataSource" ref="dataSource"/>
		<property name="databaseType" value="mysql" />
		<property name="transactionManager" ref="transactionManager"/>
		<property name="databaseSchemaUpdate" value="true" />
		<property name="jobExecutorActivate" value="true" />
		<property name="activityFontName" value="微软雅黑" />
		<property name="labelFontName" value="微软雅黑" />
	</bean>
	<bean id="processEngineFactoryBean" class="org.activiti.spring.ProcessEngineFactoryBean">
		<property name="processEngineConfiguration" ref="springProcessEngineConfiguration"/>
	</bean>
	<bean id="repositoryService" factory-bean="processEngineFactoryBean" factory-method="getRepositoryService"/>
	<bean id="runtimeService" factory-bean="processEngineFactoryBean" factory-method="getRuntimeService"/>
	<bean id="taskService" factory-bean="processEngineFactoryBean" factory-method="getTaskService"/>
	<bean id="historyService" factory-bean="processEngineFactoryBean" factory-method="getHistoryService"/>
	<bean id="identityService" factory-bean="processEngineFactoryBean" factory-method="getIdentityService"/>
	<bean id="managementService" factory-bean="processEngineFactoryBean" factory-method="getManagementService"/> -->
</beans>